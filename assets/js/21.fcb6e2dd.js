(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{655:function(s,a,e){"use strict";e.r(a);var n=e(7),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"mysql必知必会读书笔记"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mysql必知必会读书笔记"}},[s._v("#")]),s._v(" MySQL必知必会读书笔记")]),s._v(" "),e("p",[s._v("之前根据SQLBolt网站了解了SQL语句，整理了文章"),e("a",{attrs:{href:"https://yancqs.github.io/blog/2021/10/19/sql/",target:"_blank",rel:"noopener noreferrer"}},[s._v("SQL入门学习"),e("OutboundLink")],1),s._v("。")]),s._v(" "),e("p",[s._v("本次通过《MySQL必知必会》一书来更加深入且系统的学习下SQL语言。")]),s._v(" "),e("h2",{attrs:{id:"第一章-了解sql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一章-了解sql"}},[s._v("#")]),s._v(" 第一章 了解SQL")]),s._v(" "),e("h3",{attrs:{id:"概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[s._v("#")]),s._v(" 概念")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("数据库(database)")]),s._v("：保存有组织的数据的容器。")]),s._v(" "),e("li",[e("strong",[s._v("表(table)")]),s._v("：某种特定类型数据的结构化清单。")]),s._v(" "),e("li",[e("strong",[s._v("模式(scheme)")]),s._v("：关于数据库和表的布局及特性信息。")]),s._v(" "),e("li",[e("strong",[s._v("列(column)")]),s._v("：表由列组成。所有表都是由一个或多个列组成的。")]),s._v(" "),e("li",[e("strong",[s._v("数据类型(datatype)")]),s._v("：所容许的数据的类型。每个表列都有相应的数据类型，它限制改列中存储的数据。")]),s._v(" "),e("li",[e("strong",[s._v("行(row)")]),s._v("：表中的一个记录。")]),s._v(" "),e("li",[e("strong",[s._v("主键(primary key)")]),s._v("：一列（或"),e("strong",[s._v("一组列")]),s._v("），其值能够唯一区分表中每个行。表中的任何列都可以作为主键，只要它满足一下条件\n"),e("ul",[e("li",[s._v("任意两行都不具有相同的主键值")]),s._v(" "),e("li",[s._v("每个行都必须具有一个主键值（主键列不允许NULL值）")])])])]),s._v(" "),e("blockquote",[e("p",[s._v("主键的好习惯：")]),s._v(" "),e("ol",[e("li",[s._v("不更新主键列中的值")]),s._v(" "),e("li",[s._v("不重用主键列的值")]),s._v(" "),e("li",[s._v("不在主键列中使用可能会更改的值。")])])]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("SQL")]),s._v("：结构化查询语言（Structured Query Language）")])]),s._v(" "),e("h2",{attrs:{id:"第二章-mysql简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第二章-mysql简介"}},[s._v("#")]),s._v(" 第二章 MySQL简介")]),s._v(" "),e("p",[s._v("本章主要介绍了什么是MySQL，并引入了几个客户机实用程序。")]),s._v(" "),e("blockquote",[e("p",[s._v("个人还是推荐Navicat premium")])]),s._v(" "),e("h2",{attrs:{id:"第三章-使用mysql"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第三章-使用mysql"}},[s._v("#")]),s._v(" 第三章 使用MySQL")]),s._v(" "),e("h3",{attrs:{id:"连接"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接"}},[s._v("#")]),s._v(" 连接")]),s._v(" "),e("p",[s._v("为了连接到MySQL，需要以下信息：")]),s._v(" "),e("ul",[e("li",[s._v("主机名：如果连接到本地MySQL服务器，为"),e("code",[s._v("localhost")])]),s._v(" "),e("li",[s._v("端口：默认是3306")]),s._v(" "),e("li",[s._v("一个合法的用户名")]),s._v(" "),e("li",[s._v("用户密码")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/yancqS/blogImage/raw/master/blogImage/20211129222627.png",alt:""}})]),s._v(" "),e("h3",{attrs:{id:"选择数据库"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#选择数据库"}},[s._v("#")]),s._v(" 选择数据库")]),s._v(" "),e("p",[s._v("关键字"),e("code",[s._v("USE")]),s._v("、"),e("code",[s._v("SHOW")]),s._v(";")]),s._v(" "),e("p",[s._v("显示可用的数据库列表：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("databases")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| customers          |\n| information_schema |\n| mysql              |\n| performance_schema |\n| sql_learn          |\n| sys                |\n+--------------------+\n6 rows in set (0.01 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("使用"),e("code",[s._v("USE")]),s._v("关键字选择一个数据库,并且用"),e("code",[s._v("SHOW")]),s._v("获取数据库内表的列表：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("use")]),s._v(" customers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("tables")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> use customers;\nReading table information for completion of table and column names\nYou can turn off this feature to get a quicker startup with -A\n\nDatabase changed\nmysql> show tables;\n+---------------------+\n| Tables_in_customers |\n+---------------------+\n| customers           |\n| orderitems          |\n| orders              |\n| productnotes        |\n| products            |\n| vendors             |\n+---------------------+\n6 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("code",[s._v("SHOW")]),s._v("也可以用来显示表列：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("show")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("columns")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//或")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("describe")]),s._v(" customers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> show columns from customers;\n+--------------+-----------+------+-----+---------+----------------+\n| Field        | Type      | Null | Key | Default | Extra          |\n+--------------+-----------+------+-----+---------+----------------+\n| cust_id      | int       | NO   | PRI | NULL    | auto_increment |\n| cust_name    | char(50)  | NO   |     | NULL    |                |\n| cust_address | char(50)  | YES  |     | NULL    |                |\n| cust_city    | char(50)  | YES  |     | NULL    |                |\n| cust_state   | char(5)   | YES  |     | NULL    |                |\n| cust_zip     | char(10)  | YES  |     | NULL    |                |\n| cust_country | char(50)  | YES  |     | NULL    |                |\n| cust_contact | char(50)  | YES  |     | NULL    |                |\n| cust_email   | char(255) | YES  |     | NULL    |                |\n+--------------+-----------+------+-----+---------+----------------+\n9 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("blockquote",[e("p",[s._v("什么是自动增量？")]),s._v(" "),e("p",[s._v("某些表列需要唯一值。例如订单编号、雇员ID等。在每个行添加到表中时，MySQL可以自动地为每个行分配下一个可用编号，不用在添加一行时手动分配唯一值。这个功能就是所谓的自动增量。")])]),s._v(" "),e("h3",{attrs:{id:"其他show语句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他show语句"}},[s._v("#")]),s._v(" 其他SHOW语句")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("SHOW STATUS;")]),s._v("，用于显示广泛的服务器状态信息；")]),s._v(" "),e("li",[e("code",[s._v("SHOW CREATE DATABASE <base_name>")]),s._v("和"),e("code",[s._v("SHOW CREATE TABLE <table_name>")]),s._v("，分别用来显示创建特定数据库或表的MySQL语句。")])]),s._v(" "),e("blockquote",[e("p",[s._v("执行"),e("code",[s._v("HELP SHOW;")]),s._v("显示运行的"),e("code",[s._v("SHOW")]),s._v("语句。")])]),s._v(" "),e("h2",{attrs:{id:"第四章-检索数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第四章-检索数据"}},[s._v("#")]),s._v(" 第四章 检索数据")]),s._v(" "),e("h3",{attrs:{id:"检索单个列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检索单个列"}},[s._v("#")]),s._v(" 检索单个列")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("利用"),e("code",[s._v("SELECT")]),s._v("语句从"),e("code",[s._v("products")]),s._v("表中检索一个名为"),e("code",[s._v("prod_name")]),s._v("的列。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products;\n+----------------+\n| prod_name      |\n+----------------+\n| .5 ton anvil   |\n| 1 ton anvil    |\n| 2 ton anvil    |\n| Detonator      |\n| Bird seed      |\n| Carrots        |\n| Fuses          |\n| JetPack 1000   |\n| JetPack 2000   |\n| Oil can        |\n| Safe           |\n| Sling          |\n| TNT (1 stick)  |\n| TNT (5 sticks) |\n+----------------+\n14 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("blockquote",[e("p",[s._v("注意：SQL语句不区分大小写。")])]),s._v(" "),e("h3",{attrs:{id:"检索多个列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检索多个列"}},[s._v("#")]),s._v(" 检索多个列")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, prod_name, prod_price from products;\n+---------+----------------+------------+\n| prod_id | prod_name      | prod_price |\n+---------+----------------+------------+\n| ANV01   | .5 ton anvil   |       5.99 |\n| ANV02   | 1 ton anvil    |       9.99 |\n| ANV03   | 2 ton anvil    |      14.99 |\n| DTNTR   | Detonator      |      13.00 |\n| FB      | Bird seed      |      10.00 |\n| FC      | Carrots        |       2.50 |\n| FU1     | Fuses          |       3.42 |\n| JP1000  | JetPack 1000   |      35.00 |\n| JP2000  | JetPack 2000   |      55.00 |\n| OL1     | Oil can        |       8.99 |\n| SAFE    | Safe           |      50.00 |\n| SLING   | Sling          |       4.49 |\n| TNT1    | TNT (1 stick)  |       2.50 |\n| TNT2    | TNT (5 sticks) |      10.00 |\n+---------+----------------+------------+\n14 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h3",{attrs:{id:"检索所有列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检索所有列"}},[s._v("#")]),s._v(" 检索所有列")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:"https://gitee.com/yancqS/blogImage/raw/master/blogImage/20211130215805.png",alt:""}})]),s._v(" "),e("blockquote",[e("p",[s._v("注意：一般，除非你真的需要表中的每个列，否则最好别使用*通配符。因为检索不需要的的列通常会降低检索和应用程序的性能。")])]),s._v(" "),e("h3",{attrs:{id:"检索不同行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#检索不同行"}},[s._v("#")]),s._v(" 检索不同行")]),s._v(" "),e("p",[s._v("关键字"),e("code",[s._v("DISTINCT")]),s._v(";顾名思义，此关键字指示MySQL只返回不同的值。")]),s._v(" "),e("p",[s._v("正如所见，"),e("code",[s._v("SELECT")]),s._v("返回所有匹配的行。但是，如果你不想要每个值每次都出现，怎么办？例如，你想要的出products表中产品的所有供应商ID：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("code",[s._v("SELECT")]),s._v("语句返回14行（即使表中只有4个供货商）。那么，如何检索出有不同值的列表呢？")]),s._v(" "),e("p",[s._v("解决办法时使用"),e("code",[s._v("DISTINCT")]),s._v("关键字。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("distinct")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select distinct vend_id from products;\n+---------+\n| vend_id |\n+---------+\n|    1001 |\n|    1002 |\n|    1003 |\n|    1005 |\n+---------+\n4 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("blockquote",[e("p",[s._v("不能部分使用DISTINCT。"),e("code",[s._v("DISTINCT")]),s._v("关键字应用于所有列而不仅是前置它的列。如果给出"),e("code",[s._v("SELECT DISTINCT vend_id, prod_price from products")]),s._v("，除非指定的两个列都相同，否则所有行都将被检索出来。")])]),s._v(" "),e("h3",{attrs:{id:"限制结果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#限制结果"}},[s._v("#")]),s._v(" 限制结果")]),s._v(" "),e("p",[s._v("为了返回第一行或前几行，可使用"),e("code",[s._v("LIMIT")]),s._v("子句。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products limit 5;\n+--------------+\n| prod_name    |\n+--------------+\n| .5 ton anvil |\n| 1 ton anvil  |\n| 2 ton anvil  |\n| Detonator    |\n| Bird seed    |\n+--------------+\n5 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("code",[s._v("LIMIT 5, 5")]),s._v("表示返回从行5开始的5行。"),e("strong",[s._v("第一个数为开始的位置，第二个数为要检索的行数。")])]),s._v(" "),e("blockquote",[e("p",[s._v("由于这种写法很容易把人搞糊涂，建议使用"),e("code",[s._v("LIMIT 5 OFFSET 5")]),s._v(";")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products limit 5, 5;\n+--------------+\n| prod_name    |\n+--------------+\n| Carrots      |\n| Fuses        |\n| JetPack 1000 |\n| JetPack 2000 |\n| Oil can      |\n+--------------+\n5 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("blockquote",[e("p",[s._v("行0：检索出来的第一行为行0而不是行1.")])]),s._v(" "),e("blockquote",[e("p",[s._v("MySQL 5支持另外一种替代语法：")]),s._v(" "),e("p",[e("code",[s._v("LIMIT 3, 4")]),s._v("等价于"),e("code",[s._v("LIMIT 4 OFFSET 3")])])]),s._v(" "),e("h3",{attrs:{id:"使用完全限定的表名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用完全限定的表名"}},[s._v("#")]),s._v(" 使用完全限定的表名")]),s._v(" "),e("p",[s._v("迄今为止使用的SQL例子只通过列明引用列。也可能使用完全限制的名字来引用列（同时使用表名和列名），比如：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("products"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"第五章-排序检索数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第五章-排序检索数据"}},[s._v("#")]),s._v(" 第五章 排序检索数据")]),s._v(" "),e("p",[s._v("关系数据库设计理论认为，如果不明确规定顺序排序，则不应该假定检索出的数据的顺序有意义。")]),s._v(" "),e("h3",{attrs:{id:"排序数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#排序数据"}},[s._v("#")]),s._v(" 排序数据")]),s._v(" "),e("ul",[e("li",[e("strong",[s._v("子句")]),s._v("：SQL语句由子句构成，有些子句是必须的，而有些是可选的。子句的例子有"),e("code",[s._v("SELECT")]),s._v("语句的"),e("code",[s._v("FROM")]),s._v("子句。")])]),s._v(" "),e("p",[s._v("为了明确地排序用"),e("code",[s._v("SELECT")]),s._v("语句检索出的数据，可使用"),e("code",[s._v("ORDER BY")]),s._v("子句。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products order by prod_name;\n+----------------+\n| prod_name      |\n+----------------+\n| .5 ton anvil   |\n| 1 ton anvil    |\n| 2 ton anvil    |\n| Bird seed      |\n| Carrots        |\n| Detonator      |\n| Fuses          |\n| JetPack 1000   |\n| JetPack 2000   |\n| Oil can        |\n| Safe           |\n| Sling          |\n| TNT (1 stick)  |\n| TNT (5 sticks) |\n+----------------+\n14 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("blockquote",[e("p",[s._v("用非检索的列排序数据是完全合法的。")])]),s._v(" "),e("h3",{attrs:{id:"按多个列排序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#按多个列排序"}},[s._v("#")]),s._v(" 按多个列排序")]),s._v(" "),e("p",[s._v("下面检索3个列，并按其中两个列对结果进行排序——首先按价格，然后再按名称排序。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, prod_price, prod_name from products order by prod_price, prod_name;\n+---------+------------+----------------+\n| prod_id | prod_price | prod_name      |\n+---------+------------+----------------+\n| FC      |       2.50 | Carrots        |\n| TNT1    |       2.50 | TNT (1 stick)  |\n| FU1     |       3.42 | Fuses          |\n| SLING   |       4.49 | Sling          |\n| ANV01   |       5.99 | .5 ton anvil   |\n| OL1     |       8.99 | Oil can        |\n| ANV02   |       9.99 | 1 ton anvil    |\n| FB      |      10.00 | Bird seed      |\n| TNT2    |      10.00 | TNT (5 sticks) |\n| DTNTR   |      13.00 | Detonator      |\n| ANV03   |      14.99 | 2 ton anvil    |\n| JP1000  |      35.00 | JetPack 1000   |\n| SAFE    |      50.00 | Safe           |\n| JP2000  |      55.00 | JetPack 2000   |\n+---------+------------+----------------+\n14 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("重要的是理解在按多个列排序时，排序完全按照所规定的顺序进行。")]),s._v(" "),e("p",[s._v("对于上述例子的输出，仅在多个行具有相同的prod_price值时才对产品的prod_name进行排序。如果prod_price列中所有的值都是唯一的，则不会按prod_name排序。")]),s._v(" "),e("h3",{attrs:{id:"指定排序方向"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#指定排序方向"}},[s._v("#")]),s._v(" 指定排序方向")]),s._v(" "),e("p",[s._v("默认是升序排序，我们还可以使用"),e("code",[s._v("ORDER BY")]),s._v("子句降序排序，此时需要指定关键字"),e("code",[s._v("DESC")]),s._v(";")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("DESC")]),s._v("：降序")]),s._v(" "),e("li",[e("code",[s._v("ASC")]),s._v("：升序，默认")])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, prod_price, prod_name from products order by prod_price desc;\n+---------+------------+----------------+\n| prod_id | prod_price | prod_name      |\n+---------+------------+----------------+\n| JP2000  |      55.00 | JetPack 2000   |\n| SAFE    |      50.00 | Safe           |\n| JP1000  |      35.00 | JetPack 1000   |\n| ANV03   |      14.99 | 2 ton anvil    |\n| DTNTR   |      13.00 | Detonator      |\n| FB      |      10.00 | Bird seed      |\n| TNT2    |      10.00 | TNT (5 sticks) |\n| ANV02   |       9.99 | 1 ton anvil    |\n| OL1     |       8.99 | Oil can        |\n| ANV01   |       5.99 | .5 ton anvil   |\n| SLING   |       4.49 | Sling          |\n| FU1     |       3.42 | Fuses          |\n| FC      |       2.50 | Carrots        |\n| TNT1    |       2.50 | TNT (1 stick)  |\n+---------+------------+----------------+\n14 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[s._v("如果打算对多个列排序：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("desc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("code",[s._v("DESC")]),s._v("关键字只应用到直接位于其前面的列名。如果想在多个列上进行降序排序，必须对每个列指定"),e("code",[s._v("DESC")]),s._v("关键字。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, prod_price, prod_name from products order by prod_price desc, prod_name;\n+---------+------------+----------------+\n| prod_id | prod_price | prod_name      |\n+---------+------------+----------------+\n| JP2000  |      55.00 | JetPack 2000   |\n| SAFE    |      50.00 | Safe           |\n| JP1000  |      35.00 | JetPack 1000   |\n| ANV03   |      14.99 | 2 ton anvil    |\n| DTNTR   |      13.00 | Detonator      |\n| FB      |      10.00 | Bird seed      |\n| TNT2    |      10.00 | TNT (5 sticks) |\n| ANV02   |       9.99 | 1 ton anvil    |\n| OL1     |       8.99 | Oil can        |\n| ANV01   |       5.99 | .5 ton anvil   |\n| SLING   |       4.49 | Sling          |\n| FU1     |       3.42 | Fuses          |\n| FC      |       2.50 | Carrots        |\n| TNT1    |       2.50 | TNT (1 stick)  |\n+---------+------------+----------------+\n14 rows in set (0.01 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h4",{attrs:{id:"注意⚠️"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意⚠️"}},[s._v("#")]),s._v(" 注意⚠️")]),s._v(" "),e("p",[e("code",[s._v("ORDER BY")]),s._v("子句的位置，在给出"),e("code",[s._v("ORDER BY")]),s._v("子句时，应该保证它位于"),e("code",[s._v("FROM")]),s._v("子句之后，如果要使用"),e("code",[s._v("LIMIT")]),s._v("，它必须位于"),e("code",[s._v("ORDER BY")]),s._v("之后。使用子句的次序不对将产生错误消息。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("another_column"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" …\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("mytable"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ORDER")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("BY")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("column")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ASC")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DESC")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LIMIT")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("num_limit"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("OFFSET")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("num_offset"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"第六章-过滤数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第六章-过滤数据"}},[s._v("#")]),s._v(" 第六章 过滤数据")]),s._v(" "),e("h3",{attrs:{id:"使用where子句"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用where子句"}},[s._v("#")]),s._v(" 使用WHERE子句")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.50")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where prod_price=2.50;\n+---------------+------------+\n| prod_name     | prod_price |\n+---------------+------------+\n| Carrots       |       2.50 |\n| TNT (1 stick) |       2.50 |\n+---------------+------------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("blockquote",[e("p",[e("code",[s._v("WHERE")]),s._v("子句的位置：在同时使用"),e("code",[s._v("WHERE")]),s._v("子句和"),e("code",[s._v("ORDER BY")]),s._v("子句时，应该让"),e("code",[s._v("ORDER BY")]),s._v("位于"),e("code",[s._v("WHERE")]),s._v("之后，否则将会产生错误。")])]),s._v(" "),e("h3",{attrs:{id:"where子句操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#where子句操作符"}},[s._v("#")]),s._v(" WHERE子句操作符")]),s._v(" "),e("p",[e("code",[s._v("WHERE")]),s._v("子句操作符：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("操作符")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("=")]),s._v(" "),e("td",[s._v("等于")])]),s._v(" "),e("tr",[e("td",[s._v("<>")]),s._v(" "),e("td",[s._v("不等于")])]),s._v(" "),e("tr",[e("td",[s._v("!=")]),s._v(" "),e("td",[s._v("不等于")])]),s._v(" "),e("tr",[e("td",[s._v("<")]),s._v(" "),e("td",[s._v("小于")])]),s._v(" "),e("tr",[e("td",[s._v("<=")]),s._v(" "),e("td",[s._v("小于等于")])]),s._v(" "),e("tr",[e("td",[s._v(">")]),s._v(" "),e("td",[s._v("大于")])]),s._v(" "),e("tr",[e("td",[s._v(">=")]),s._v(" "),e("td",[s._v("大于等于")])]),s._v(" "),e("tr",[e("td",[s._v("BETWEEN...AND...")]),s._v(" "),e("td",[s._v("在指定的两个值之间")])])])]),s._v(" "),e("h4",{attrs:{id:"范围值检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#范围值检查"}},[s._v("#")]),s._v(" 范围值检查")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("between")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("asc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where prod_price between 10 and 30 order by prod_price asc;\n+----------------+------------+\n| prod_name      | prod_price |\n+----------------+------------+\n| Bird seed      |      10.00 |\n| TNT (5 sticks) |      10.00 |\n| Detonator      |      13.00 |\n| 2 ton anvil    |      14.99 |\n+----------------+------------+\n4 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h4",{attrs:{id:"不匹配检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#不匹配检查"}},[s._v("#")]),s._v(" 不匹配检查")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" vend_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_id"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select vend_id, prod_name from products where vend_id!=1003;\n+---------+--------------+\n| vend_id | prod_name    |\n+---------+--------------+\n|    1001 | .5 ton anvil |\n|    1001 | 1 ton anvil  |\n|    1001 | 2 ton anvil  |\n|    1002 | Fuses        |\n|    1002 | Oil can      |\n|    1005 | JetPack 1000 |\n|    1005 | JetPack 2000 |\n+---------+--------------+\n7 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h4",{attrs:{id:"单个值检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#单个值检查"}},[s._v("#")]),s._v(" 单个值检查")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fuses'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where prod_name = 'fuses';\n+-----------+------------+\n| prod_name | prod_price |\n+-----------+------------+\n| Fuses     |       3.42 |\n+-----------+------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("blockquote",[e("p",[s._v("何时使用引号？单引号用来限定字符串。如果将值与串类型的列进行比较，则需要限定引号。用来与数值列进行比较的值不用引号。")])]),s._v(" "),e("h4",{attrs:{id:"空值检查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#空值检查"}},[s._v("#")]),s._v(" 空值检查")]),s._v(" "),e("p",[s._v("在创建表时，表设计人员可以指定其中的列是否可以不包含值。在一个列不包含值时，称其为包含空值"),e("code",[s._v("NULL")]),s._v("。")]),s._v(" "),e("blockquote",[e("p",[e("code",[s._v("NULL")]),s._v(",无值（no value），它与字段包含0、空字符串或仅仅包含空格不同。")])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" cust_id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" cust_email "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select cust_id from customers where cust_email is null;\n+---------+\n| cust_id |\n+---------+\n|   10002 |\n|   10005 |\n+---------+\n2 rows in set (0.01 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"第七章-数据过滤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第七章-数据过滤"}},[s._v("#")]),s._v(" 第七章 数据过滤")]),s._v(" "),e("p",[s._v("在第六章介绍的所有"),e("code",[s._v("WHERE")]),s._v("子句在过滤时使用的都是单一的条件。")]),s._v(" "),e("p",[s._v("为了进行更强的过滤控制，MySQL允许给出多个"),e("code",[s._v("WHERE")]),s._v("子句。这些子句可以两种方式使用：以"),e("code",[s._v("AND")]),s._v("子句的方式活以"),e("code",[s._v("OR")]),s._v("子句的方式。")]),s._v(" "),e("h3",{attrs:{id:"and操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#and操作符"}},[s._v("#")]),s._v(" AND操作符")]),s._v(" "),e("p",[e("code",[s._v("AND")]),s._v("用于检索满足所有给定条件的行；")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, prod_price, prod_name from products where vend_id = 1003 and prod_price <= 10;\n+---------+------------+----------------+\n| prod_id | prod_price | prod_name      |\n+---------+------------+----------------+\n| FB      |      10.00 | Bird seed      |\n| FC      |       2.50 | Carrots        |\n| SLING   |       4.49 | Sling          |\n| TNT1    |       2.50 | TNT (1 stick)  |\n| TNT2    |      10.00 | TNT (5 sticks) |\n+---------+------------+----------------+\n5 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("上述例子中使用了只包含一个关键字"),e("code",[s._v("AND")]),s._v("的语句，把两个过滤条件组合在一起。还可以添加多个过滤条件，每添加一条就要使用一个"),e("code",[s._v("AND")]),s._v("。")]),s._v(" "),e("h3",{attrs:{id:"or操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#or操作符"}},[s._v("#")]),s._v(" OR操作符")]),s._v(" "),e("p",[e("code",[s._v("OR")]),s._v("用于检索匹配任一给定条件的行。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price, vend_id from products where vend_id = 1002 or vend_id = 1003;\n+----------------+------------+---------+\n| prod_name      | prod_price | vend_id |\n+----------------+------------+---------+\n| Fuses          |       3.42 |    1002 |\n| Oil can        |       8.99 |    1002 |\n| Detonator      |      13.00 |    1003 |\n| Bird seed      |      10.00 |    1003 |\n| Carrots        |       2.50 |    1003 |\n| Safe           |      50.00 |    1003 |\n| Sling          |       4.49 |    1003 |\n| TNT (1 stick)  |       2.50 |    1003 |\n| TNT (5 sticks) |      10.00 |    1003 |\n+----------------+------------+---------+\n9 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h3",{attrs:{id:"计算次序"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#计算次序"}},[s._v("#")]),s._v(" 计算次序")]),s._v(" "),e("p",[e("code",[s._v("WHERE")]),s._v("可包含任意数目的"),e("code",[s._v("AND")]),s._v("和"),e("code",[s._v("OR")]),s._v("操作符。允许两者结合以进行复杂和高级的过滤。")]),s._v(" "),e("p",[s._v("但是这样会带来一个问题，请看下面的SQL语句：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where vend_id = 1002 or vend_id = 1003 and prod_price >= 10;\n+----------------+------------+\n| prod_name      | prod_price |\n+----------------+------------+\n| Fuses          |       3.42 |\n| Oil can        |       8.99 |\n| Detonator      |      13.00 |\n| Bird seed      |      10.00 |\n| Safe           |      50.00 |\n| TNT (5 sticks) |      10.00 |\n+----------------+------------+\n6 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[s._v("我们的预期是"),e("em",[s._v("列出价格为10美元（含）以上且由1002或1003制造的所有产品")]),s._v("。")]),s._v(" "),e("p",[s._v("请看上面的结果。返回的行中有两行价格小于10美元，显然不符合预期。这样的原因在于"),e("strong",[s._v("计算的次序")]),s._v("。")]),s._v(" "),e("p",[e("strong",[s._v("SQL在处理"),e("code",[s._v("OR")]),s._v("操作前，优先处理"),e("code",[s._v("AND")]),s._v("操作符")]),s._v("。因此上述SQL语句可以理解为："),e("em",[s._v("由供应商1003制造且价格为10美元（含）以上的产品，或者由供应商1002制造的任何产品，而不管其价格")]),s._v("。")]),s._v(" "),e("p",[s._v("此类问题的解决办法是"),e("strong",[s._v("使用圆括号明确地分组相应的操作")]),s._v("。修改后如下：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("or")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where (vend_id = 1002 or vend_id = 1003) and prod_price >= 10;\n+----------------+------------+\n| prod_name      | prod_price |\n+----------------+------------+\n| Detonator      |      13.00 |\n| Bird seed      |      10.00 |\n| Safe           |      50.00 |\n| TNT (5 sticks) |      10.00 |\n+----------------+------------+\n4 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("blockquote",[e("p",[s._v("不要过分的依赖默认计算次序。使用圆括号没什么坏处，它能消除歧义。")])]),s._v(" "),e("h3",{attrs:{id:"in操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#in操作符"}},[s._v("#")]),s._v(" IN操作符")]),s._v(" "),e("p",[s._v("圆括号在"),e("code",[s._v("WHERE")]),s._v("子句中还有一种用法。"),e("code",[s._v("IN")]),s._v("操作符用来指定条件范围。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where vend_id in (1002, 1003) order by prod_name;\n+----------------+------------+\n| prod_name      | prod_price |\n+----------------+------------+\n| Bird seed      |      10.00 |\n| Carrots        |       2.50 |\n| Detonator      |      13.00 |\n| Fuses          |       3.42 |\n| Oil can        |       8.99 |\n| Safe           |      50.00 |\n| Sling          |       4.49 |\n| TNT (1 stick)  |       2.50 |\n| TNT (5 sticks) |      10.00 |\n+----------------+------------+\n9 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("code",[s._v("IN")]),s._v("操作符完成与"),e("code",[s._v("OR")]),s._v("相同的功能。")]),s._v(" "),e("p",[e("code",[s._v("IN")]),s._v("操作符的优点如下：")]),s._v(" "),e("ul",[e("li",[s._v("在使用长的合法选项清单时，"),e("code",[s._v("IN")]),s._v("操作符的语法更加清洗且更直观。")]),s._v(" "),e("li",[s._v("在使用"),e("code",[s._v("IN")]),s._v("操作符时，计算的次序更容易管理。")]),s._v(" "),e("li",[e("code",[s._v("IN")]),s._v("操作符一般比"),e("code",[s._v("OR")]),s._v("操作符清单执行的更快。")]),s._v(" "),e("li",[e("code",[s._v("IN")]),s._v("操作符最大优点是可以包含其他"),e("code",[s._v("SELECT")]),s._v("语句（子查询），使得能够更加动态地建立"),e("code",[s._v("WHERE")]),s._v("子句。")])]),s._v(" "),e("h3",{attrs:{id:"not操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#not操作符"}},[s._v("#")]),s._v(" NOT操作符")]),s._v(" "),e("p",[s._v("WHERE子句中NOT操作符有且只有一个功能，那就是否定它之后所跟的任何条件。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_id "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1003")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_price from products where vend_id not in (1002, 1003) order by prod_name;\n+--------------+------------+\n| prod_name    | prod_price |\n+--------------+------------+\n| .5 ton anvil |       5.99 |\n| 1 ton anvil  |       9.99 |\n| 2 ton anvil  |      14.99 |\n| JetPack 1000 |      35.00 |\n| JetPack 2000 |      55.00 |\n+--------------+------------+\n5 rows in set (0.01 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"第八章-用通配符进行过滤"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第八章-用通配符进行过滤"}},[s._v("#")]),s._v(" 第八章 用通配符进行过滤")]),s._v(" "),e("h3",{attrs:{id:"like操作符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#like操作符"}},[s._v("#")]),s._v(" LIKE操作符")]),s._v(" "),e("ul",[e("li",[s._v("通配符：用来匹配值的一部分的特殊字符。实际是SQL的"),e("code",[s._v("WHERE")]),s._v("子句中有特殊含义的字符。")]),s._v(" "),e("li",[s._v("搜索模式：由字面值、通配符或两者组合构成的搜索条件。")])]),s._v(" "),e("p",[s._v("为了在搜索子句中使用通配符，必须使用LIKE操作符。LIKE指示MYSQL后跟的是搜索模式利用通配符匹配而不是直接相等匹配进行比较。")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("Operator")]),s._v(" "),e("th",[s._v("Condition")]),s._v(" "),e("th",[s._v("Example")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("=")]),s._v(" "),e("td",[s._v("Case sensitive exact string comparison ("),e("em",[s._v("notice the single equals")]),s._v(")")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("=")]),s._v(' "abc"')])]),s._v(" "),e("tr",[e("td",[s._v("!= or <>")]),s._v(" "),e("td",[s._v("Case sensitive exact string inequality comparison")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("!=")]),s._v(' "abcd"')])]),s._v(" "),e("tr",[e("td",[s._v("LIKE")]),s._v(" "),e("td",[s._v("Case insensitive exact string comparison")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("LIKE")]),s._v(' "ABC"')])]),s._v(" "),e("tr",[e("td",[s._v("NOT LIKE")]),s._v(" "),e("td",[s._v("Case insensitive exact string inequality comparison")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("NOT LIKE")]),s._v(' "ABCD"')])]),s._v(" "),e("tr",[e("td",[e("strong",[s._v("%")])]),s._v(" "),e("td",[s._v("Used anywhere in a string to match a sequence of zero or more characters ("),e("strong",[s._v("only with LIKE or NOT LIKE")]),s._v(")")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("LIKE")]),s._v(' "%AT%" (matches "AT", "ATTIC", "CAT" or even "BATS")')])]),s._v(" "),e("tr",[e("td",[e("strong",[s._v("_")])]),s._v(" "),e("td",[s._v("Used anywhere in a string to match a single character ("),e("strong",[s._v("only with LIKE or NOT LIKE")]),s._v(")")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("LIKE")]),s._v(' "AN_" (matches "AND", but not "AN")')])]),s._v(" "),e("tr",[e("td",[s._v("IN (…)")]),s._v(" "),e("td",[s._v("String exists in a list")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("IN")]),s._v(' ("A", "B", "C")')])]),s._v(" "),e("tr",[e("td",[s._v("NOT IN (…)")]),s._v(" "),e("td",[s._v("String does not exist in a list")]),s._v(" "),e("td",[s._v("col_name "),e("strong",[s._v("NOT IN")]),s._v(' ("D", "E", "F")')])])])]),s._v(" "),e("h4",{attrs:{id:"百分号-通配符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#百分号-通配符"}},[s._v("#")]),s._v(" 百分号（&）通配符")]),s._v(" "),e("p",[s._v("在搜索串中，"),e("code",[s._v("%")]),s._v("表示"),e("em",[s._v("任何字符出现任意次数")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jet%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, prod_name from products where prod_name like 'jet%';\n+---------+--------------+\n| prod_id | prod_name    |\n+---------+--------------+\n| JP1000  | JetPack 1000 |\n| JP2000  | JetPack 2000 |\n+---------+--------------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("blockquote",[e("p",[s._v("区分大小写：根据MySQL的配置方式，搜索可以是区分大小写的。如果区分大小写，'jet%'就不匹配 JetPack 1000。")]),s._v(" "),e("p",[e("code",[s._v("select prod_id, prod_name from products where prod_name like binary 'Jet%';")]),s._v("使用binary关键字设定where子句区分大小写。")])]),s._v(" "),e("p",[s._v("通配符可在搜索模式中任意位置使用，并且可以使用多个通配符。例如：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%anvil%'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("blockquote",[e("p",[s._v("注意尾空格：尾空格可能会干扰通配符匹配。例如在保存anvil时，如果它后面有一个或多个空格，则搜索模式『LIKE '%anvil'』不会匹配他们。解决这个问题的一个简单的办法是在搜索模式最后附加一个%。一个更好的方法是利用函数去掉首尾的空格。")])]),s._v(" "),e("blockquote",[e("p",[s._v("注意NULL：虽然似乎通配符%可以匹配任何东西，但有一个例外，即NULL。即使『LIKE '%'』搜索模式也不能匹配NULL。")])]),s._v(" "),e("p",[e("strong",[s._v("重要的是要注意到，除了一个和多个字符外，"),e("code",[s._v("%")]),s._v("还能匹配0个字符。")])]),s._v(" "),e("p",[s._v("下面的例子是找出所有以s开头以e结尾的结尾的所有产品：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s%e'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h4",{attrs:{id:"下划线-通配符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#下划线-通配符"}},[s._v("#")]),s._v(" 下划线（_）通配符")]),s._v(" "),e("p",[s._v("下划线的用途与%一样，但是下划线子匹配单个字符而不是多个字符。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" prod_id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'_ ton anvil'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name, prod_id from products where prod_name like '_ ton anvil';\n+-------------+---------+\n| prod_name   | prod_id |\n+-------------+---------+\n| 1 ton anvil | ANV02   |\n| 2 ton anvil | ANV03   |\n+-------------+---------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("与"),e("code",[s._v("%")]),s._v("能匹配0个字符不一样，"),e("strong",[e("code",[s._v("_")]),s._v("总是匹配1个字符")]),s._v("，不能多也不能少。")]),s._v(" "),e("h3",{attrs:{id:"使用通配符的技巧"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用通配符的技巧"}},[s._v("#")]),s._v(" 使用通配符的技巧")]),s._v(" "),e("p",[s._v("MySQL的通配符很有用，但是这种功能是有代价的：通配符搜索的处理一般要比前面讨论的其他搜索所花时间更长。因此：")]),s._v(" "),e("ul",[e("li",[s._v("不要过度使用通配符。")]),s._v(" "),e("li",[s._v("在使用通配符时，除非有必要，否则不要把它们用在搜索模式的开始处。把通配符放在搜索模式的开始处，搜索起来是最慢的。")]),s._v(" "),e("li",[s._v("注意通配符的位置。")])]),s._v(" "),e("h2",{attrs:{id:"第九章-用正则表达式进行搜索"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第九章-用正则表达式进行搜索"}},[s._v("#")]),s._v(" 第九章 用正则表达式进行搜索")]),s._v(" "),e("h3",{attrs:{id:"基本字符匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本字符匹配"}},[s._v("#")]),s._v(" 基本字符匹配")]),s._v(" "),e("p",[s._v("下面语句检索列prod_name保含文本1000的所有行：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1000'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '1000' order by prod_name;\n+--------------+\n| prod_name    |\n+--------------+\n| JetPack 1000 |\n+--------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("关键字"),e("code",[s._v("REGEXP")]),s._v("告诉MySQL：其后面跟着的东西作为正则表达式处理。")]),s._v(" "),e("h3",{attrs:{id:"like和正则表达式区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#like和正则表达式区别"}},[s._v("#")]),s._v(" LIKE和正则表达式区别")]),s._v(" "),e("p",[s._v("在LIKE和REGEXP质检有一个重要的差别。请看一下两条语句：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("like")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1000'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1000'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("如果执行上述两条语句，会发现第一条语句不返回数据，而第二条返回一条数据。")]),s._v(" "),e("p",[s._v("这是因为"),e("code",[s._v("LIKE")]),s._v("匹配整个列。如果被匹配的文本在列值中出现，"),e("code",[s._v("LIKE")]),s._v("不会找到它，相应的行也不会被返回（除非使用通配符）。")]),s._v(" "),e("p",[s._v("而"),e("code",[s._v("REGEXP")]),s._v("在列值内进行匹配，如果被匹配的文本在列值中出现，"),e("code",[s._v("REGEXP")]),s._v("会找到它，相应的行会被返回。")]),s._v(" "),e("p",[s._v("那REGEXP能不能用来匹配整个列，答案是肯定的，使用"),e("code",[s._v("^")]),s._v("和"),e("code",[s._v("$")]),s._v("定位符即可。")]),s._v(" "),e("h3",{attrs:{id:"进行or匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#进行or匹配"}},[s._v("#")]),s._v(" 进行OR匹配")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1000|2000'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '1000|2000' order by prod_name;\n+--------------+\n| prod_name    |\n+--------------+\n| JetPack 1000 |\n| JetPack 2000 |\n+--------------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"匹配几个字符之一"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配几个字符之一"}},[s._v("#")]),s._v(" 匹配几个字符之一")]),s._v(" "),e("p",[s._v("如果你想匹配特定的字符，你可以指定一组用 [ 和 ] 括起来的字符来完成。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[123] Ton'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '[123] Ton' order by prod_name;\n+-------------+\n| prod_name   |\n+-------------+\n| 1 ton anvil |\n| 2 ton anvil |\n+-------------+\n2 rows in set (0.01 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("事实上，正则表达式[123] Ton 为 [1|2|3] Ton 的缩写，也可以使用后者。")]),s._v(" "),e("blockquote",[e("p",[s._v("'1 | 2 | 3 ton' 会被理解为1 或 2  或 3 ton。因此需要[]包裹。")])]),s._v(" "),e("p",[s._v("字符集合也可以被否定，[123] 匹配字符1、2或3，但是[^123]却匹配除这些字符之外的任何东西。")]),s._v(" "),e("h3",{attrs:{id:"匹配范围"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配范围"}},[s._v("#")]),s._v(" 匹配范围")]),s._v(" "),e("p",[s._v("下面的集合将匹配数字0到9：[0123456789]，为了简化这种写法，可用"),e("code",[s._v("-")]),s._v("来定义范围：[0-9];")]),s._v(" "),e("p",[s._v("范围不限于完整的集合，[1-3]和[6-9]也是合法的。范围也不一定只是数值的，[a-z]匹配任意字母字符。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[1-5] Ton'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '[1-5] Ton' order by prod_name;\n+--------------+\n| prod_name    |\n+--------------+\n| .5 ton anvil |\n| 1 ton anvil  |\n| 2 ton anvil  |\n+--------------+\n3 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"匹配特殊字符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配特殊字符"}},[s._v("#")]),s._v(" 匹配特殊字符")]),s._v(" "),e("p",[s._v("如何找出保含"),e("code",[s._v(".")]),s._v("字符的值？为了匹配特殊字符，必须用"),e("code",[s._v("\\\\")]),s._v("为前导。"),e("code",[s._v("\\\\-")]),s._v("表示查找"),e("code",[s._v("-")]),s._v("，"),e("code",[s._v("\\\\.")]),s._v("表示查找"),e("code",[s._v(".")]),s._v("。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" vend_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" vendors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\\\.'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" vend_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select vend_name from vendors where vend_name regexp '\\\\.' order by vend_name;\n+--------------+\n| vend_name    |\n+--------------+\n| Furball Inc. |\n+--------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("blockquote",[e("p",[s._v("匹配"),e("code",[s._v("\\")]),s._v("字符本身：需要使用"),e("code",[s._v("\\\\\\")])])]),s._v(" "),e("p",[s._v("多数正则表达式实现使用单个反斜杠转义特殊字符，以便能使用这些字符本身。但是MySQL要求两个反斜杠（MySQL自己解释一个，正则表达式库解释另一个）。")]),s._v(" "),e("h3",{attrs:{id:"匹配字符类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配字符类"}},[s._v("#")]),s._v(" 匹配字符类")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/yancqS/blogImage/raw/master/blogImage/20211212222215.png",alt:""}})]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" vend_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" vendors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:upper:]]'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//等价于")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" vend_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" vendors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" vend_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[A-Z]'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"匹配多个实例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#匹配多个实例"}},[s._v("#")]),s._v(" 匹配多个实例")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("元字符")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("*")]),s._v(" "),e("td",[s._v("0个或多个匹配")])]),s._v(" "),e("tr",[e("td",[s._v("+")]),s._v(" "),e("td",[s._v("一个或多个匹配（等于{1,}）")])]),s._v(" "),e("tr",[e("td",[s._v("?")]),s._v(" "),e("td",[s._v("0个或1个匹配（等于{0, 1}）")])]),s._v(" "),e("tr",[e("td",[s._v("{n}")]),s._v(" "),e("td",[s._v("指定数目的匹配")])]),s._v(" "),e("tr",[e("td",[s._v("{n, }")]),s._v(" "),e("td",[s._v("不少于指定数目的匹配")])]),s._v(" "),e("tr",[e("td",[s._v("{n, m}")]),s._v(" "),e("td",[s._v("匹配数目的范围（m不超过255）")])])])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\\\([0-9] sticks?\\\\)'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '\\\\([0-9] sticks?\\\\)' order by prod_name;\n+----------------+\n| prod_name      |\n+----------------+\n| TNT (1 stick)  |\n| TNT (5 sticks) |\n+----------------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("另外一个例子：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[:digit:]]{4}'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '[[:digit:]]{4}' order by prod_name;\n+--------------+\n| prod_name    |\n+--------------+\n| JetPack 1000 |\n| JetPack 2000 |\n+--------------+\n2 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("上面的例子也可如此编写：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0-9][0-9][0-9][0-9]'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"定位符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#定位符"}},[s._v("#")]),s._v(" 定位符")]),s._v(" "),e("p",[s._v("为了匹配特定位置的文本，可以使用下列定位符：")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("元字符")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("^")]),s._v(" "),e("td",[s._v("文本的开始")])]),s._v(" "),e("tr",[e("td",[s._v("$")]),s._v(" "),e("td",[s._v("文本的结尾")])]),s._v(" "),e("tr",[e("td",[s._v("[[:<:]]")]),s._v(" "),e("td",[s._v("词的开始")])]),s._v(" "),e("tr",[e("td",[s._v("[[:>:]]")]),s._v(" "),e("td",[s._v("词的结尾")])])])]),s._v(" "),e("p",[s._v("例如找出以一个数（包括小数点开始的数）开始的所有产品：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[[0-9]\\\\.]'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 或")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" products "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" prod_name "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[[:digit:]\\\\.]'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" prod_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_name from products where prod_name regexp '^[[0-9]\\\\.]' order by prod_name;\n+--------------+\n| prod_name    |\n+--------------+\n| .5 ton anvil |\n| 1 ton anvil  |\n| 2 ton anvil  |\n+--------------+\n3 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("blockquote",[e("p",[e("code",[s._v("^")]),s._v("的双重用途，在集合（用 [ 和 ] 定义）中，用它来否定该集合，否则，用来指串的开始处。")])]),s._v(" "),e("h4",{attrs:{id:"简单的正则表达式测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简单的正则表达式测试"}},[s._v("#")]),s._v(" 简单的正则表达式测试")]),s._v(" "),e("p",[s._v("可以在不实用数据库表的情况下用"),e("code",[s._v("select")]),s._v("来测试正则表达式。"),e("code",[s._v("REGEXP")]),s._v("检查总是返回0（没有匹配）或者1（匹配）。")]),s._v(" "),e("p",[s._v("语法如下：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0-9]'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("regexp")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[a-z]{2,}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select 'hello' regexp '[a-z]{2,}';\n+----------------------------+\n| 'hello' regexp '[a-z]{2,}' |\n+----------------------------+\n|                          1 |\n+----------------------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"第十章-创建计算字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第十章-创建计算字段"}},[s._v("#")]),s._v(" 第十章 创建计算字段")]),s._v(" "),e("h3",{attrs:{id:"拼接字段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#拼接字段"}},[s._v("#")]),s._v(" 拼接字段")]),s._v(" "),e("ul",[e("li",[s._v("拼接：将值联结到一起构成单个值。")])]),s._v(" "),e("p",[s._v("可使用拼接函数"),e("code",[s._v("concat()")]),s._v("函数来拼接两个列。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" concat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vend_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'('")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vend_country "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("')'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" vendors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" vend_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select concat(vend_name, '(', vend_country ,')') from vendors order by vend_name;\n+-------------------------------------------+\n| concat(vend_name, '(', vend_country ,')') |\n+-------------------------------------------+\n| ACME(USA)                                 |\n| Anvils R Us(USA)                          |\n| Furball Inc.(USA)                         |\n| Jet Set(England)                          |\n| Jouets Et Ours(France)                    |\n| LT Supplies(USA)                          |\n+-------------------------------------------+\n6 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("code",[s._v("concat()")]),s._v("拼接串，即把多个串连接起来行成一个较长的串。")]),s._v(" "),e("blockquote",[e("p",[s._v("Trim函数：")]),s._v(" "),e("ul",[e("li",[s._v("RTrim() 去掉串右边的空格")]),s._v(" "),e("li",[s._v("LTrim() 去掉串左边的空格")]),s._v(" "),e("li",[s._v("Trim() 去掉串左右两边的空格")])])]),s._v(" "),e("h4",{attrs:{id:"使用别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用别名"}},[s._v("#")]),s._v(" 使用别名")]),s._v(" "),e("p",[s._v("别名是一个字段或值的替换名，有时也称为导出列。别名用"),e("code",[s._v("AS")]),s._v("关键字赋予。")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" concat"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("vend_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'('")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" vend_country "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("')'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" vend_title "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" vendors "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("order")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" vend_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select concat(vend_name, '(', vend_country ,')') as vend_title from vendors order by vend_name;\n+------------------------+\n| vend_title             |\n+------------------------+\n| ACME(USA)              |\n| Anvils R Us(USA)       |\n| Furball Inc.(USA)      |\n| Jet Set(England)       |\n| Jouets Et Ours(France) |\n| LT Supplies(USA)       |\n+------------------------+\n6 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"执行算术计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#执行算术计算"}},[s._v("#")]),s._v(" 执行算术计算")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("操作符")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("+")]),s._v(" "),e("td",[s._v("加")])]),s._v(" "),e("tr",[e("td",[s._v("-")]),s._v(" "),e("td",[s._v("减")])]),s._v(" "),e("tr",[e("td",[s._v("*")]),s._v(" "),e("td",[s._v("乘")])]),s._v(" "),e("tr",[e("td",[s._v("/")]),s._v(" "),e("td",[s._v("除")])])])]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" prod_id"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t quantity"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t item_price"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\t\t\t quantity "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" item_price "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" expanded_price\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" orderitems "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" order_num "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("20005")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select prod_id, quantity, item_price, quantity * item_price as expanded_price from orderitems where order_num = 20005;\n+---------+----------+------------+----------------+\n| prod_id | quantity | item_price | expanded_price |\n+---------+----------+------------+----------------+\n| ANV01   |       10 |       5.99 |          59.90 |\n| ANV02   |        3 |       9.99 |          29.97 |\n| TNT2    |        5 |      10.00 |          50.00 |\n| FB      |        1 |      10.00 |          10.00 |\n+---------+----------+------------+----------------+\n4 rows in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h3",{attrs:{id:"如何测试计算"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何测试计算"}},[s._v("#")]),s._v(" 如何测试计算")]),s._v(" "),e("p",[e("code",[s._v("SELECT")]),s._v("提供了测试和试验函数与计算的一个很好的办法。虽然"),e("code",[s._v("SELECT")]),s._v("通常用来从表中检索数据，但可以省略"),e("code",[s._v("FROM")]),s._v("子句以便简单的访问和处理表达式。")]),s._v(" "),e("p",[s._v("例如:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select 3*3;\n+-----+\n| 3*3 |\n+-----+\n|   9 |\n+-----+\n1 row in set (0.00 sec)\n\nmysql> select now();\n+---------------------+\n| now()               |\n+---------------------+\n| 2021-12-13 23:06:40 |\n+---------------------+\n1 row in set (0.00 sec)\n\nmysql> select trim(' 345 ');\n+---------------+\n| trim(' 345 ') |\n+---------------+\n| 345           |\n+---------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h2",{attrs:{id:"第十一章-使用数据处理函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第十一章-使用数据处理函数"}},[s._v("#")]),s._v(" 第十一章 使用数据处理函数")]),s._v(" "),e("h3",{attrs:{id:"常用的文本处理函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用的文本处理函数"}},[s._v("#")]),s._v(" 常用的文本处理函数")]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",[s._v("函数")]),s._v(" "),e("th",[s._v("说明")])])]),s._v(" "),e("tbody",[e("tr",[e("td",[s._v("left(str, num)")]),s._v(" "),e("td",[s._v("返回串左边num位字符")])]),s._v(" "),e("tr",[e("td",[s._v("length(str)")]),s._v(" "),e("td",[s._v("返回字符串的长度")])]),s._v(" "),e("tr",[e("td",[s._v("locate(substr, str, pos)")]),s._v(" "),e("td",[s._v("返回从第pos尾查找第一次出现子字符串的位置，"),e("a",{attrs:{href:"https://www.fujieace.com/mysql/functions/locate.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参考文章"),e("OutboundLink")],1)])]),s._v(" "),e("tr",[e("td",[s._v("lower(str)")]),s._v(" "),e("td",[s._v("将字符串转为小写")])]),s._v(" "),e("tr",[e("td",[s._v("ltrim(str)")]),s._v(" "),e("td",[s._v("去掉字符串左边的空格")])]),s._v(" "),e("tr",[e("td",[s._v("right(str, num)")]),s._v(" "),e("td",[s._v("返回串右边num位字符")])]),s._v(" "),e("tr",[e("td",[s._v("rtrim(str)")]),s._v(" "),e("td",[s._v("去掉字符串右边的空格")])]),s._v(" "),e("tr",[e("td",[s._v("soundex(str)")]),s._v(" "),e("td",[s._v("返回串的SOUNDEX值")])]),s._v(" "),e("tr",[e("td",[s._v("substring(str, pos)")]),s._v(" "),e("td",[s._v("截取特定长度的字符串，substring(被截取字符串， 从第几位开始截取)")])]),s._v(" "),e("tr",[e("td",[s._v("substring(str, pos, length)")]),s._v(" "),e("td",[s._v("substring(被截取字符串，从第几位开始截取，截取长度)")])]),s._v(" "),e("tr",[e("td",[s._v("upper(str)")]),s._v(" "),e("td",[s._v("将串转为大写")])]),s._v(" "),e("tr",[e("td",[s._v("substring_index(str, delim, count)")]),s._v(" "),e("td",[s._v("substring_index(被截取字符串，关键字，关键字出现的次数)")])]),s._v(" "),e("tr",[e("td",[s._v("trim(str)")]),s._v(" "),e("td",[s._v("去掉字符串左右两边的空格")])])])]),s._v(" "),e("p",[s._v("需要对"),e("code",[s._v("soundex")]),s._v("做出进一步解释。"),e("code",[s._v("soundex")]),s._v("是一个将任何文本串转为描述其语音表示的字母数字模式的算法。")]),s._v(" "),e("p",[s._v("举个例子：customers表中有一个顾客Coyote Inc.，其联系名为Y Lee，但是如果这是输入错误，此联系人实际为Y Lie，怎么办？显然按照正确的联系名搜索不会返回数据，如下所示：")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" cust_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cust_contact "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" cust_contact "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Y Lie'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("现在使用"),e("code",[s._v("soundex()")]),s._v("函数进行搜索:")]),s._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" cust_name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" cust_contact "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" customers "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" soundex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("cust_contact"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" soundex"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Y Lie'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("mysql> select cust_name, cust_contact from customers where soundex(cust_contact) = soundex('Y Lie');\n+-------------+--------------+\n| cust_name   | cust_contact |\n+-------------+--------------+\n| Coyote Inc. | Y Lee        |\n+-------------+--------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("每个函数的示例如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// left函数\nmysql> select left('ABcddrere', 3);\n+----------------------+\n| left('ABcddrere', 3) |\n+----------------------+\n| ABc                  |\n+----------------------+\n1 row in set (0.00 sec)\n// length函数\nmysql> select length('ABcddrere');\n+---------------------+\n| length('ABcddrere') |\n+---------------------+\n|                   9 |\n+---------------------+\n1 row in set (0.00 sec)\n// locate函数\nmysql> select locate('abc', 'eryabcyabcui');\n+-------------------------------+\n| locate('abc', 'eryabcyabcui') |\n+-------------------------------+\n|                             4 |\n+-------------------------------+\n1 row in set (0.00 sec)\n\nmysql> select locate('abc', 'eryabcyabcui', 5);\n+----------------------------------+\n| locate('abc', 'eryabcyabcui', 5) |\n+----------------------------------+\n|                                8 |\n+----------------------------------+\n1 row in set (0.00 sec)\n// lower函数\nmysql> select lower('ABcddrere');\n+--------------------+\n| lower('ABcddrere') |\n+--------------------+\n| abcddrere          |\n+--------------------+\n1 row in set (0.00 sec)\n// ltrim函数\nmysql> select ltrim('  ABcddrere');\n+----------------------+\n| ltrim('  ABcddrere') |\n+----------------------+\n| ABcddrere            |\n+----------------------+\n1 row in set (0.00 sec)\n// right函数\nmysql> select right('ABcddrere', 3);\n+-----------------------+\n| right('ABcddrere', 3) |\n+-----------------------+\n| ere                   |\n+-----------------------+\n1 row in set (0.00 sec)\n// rtrim函数\nmysql> select rtrim('ABcddrere  ');\n+----------------------+\n| rtrim('ABcddrere  ') |\n+----------------------+\n| ABcddrere            |\n+----------------------+\n1 row in set (0.00 sec)\n// upper函数\nmysql> select upper('ABcddrere');\n+--------------------+\n| upper('ABcddrere') |\n+--------------------+\n| ABCDDRERE          |\n+--------------------+\n1 row in set (0.00 sec)\n//trim函数\nmysql> select trim('   ABcddrere  ');\n+------------------------+\n| trim('   ABcddrere  ') |\n+------------------------+\n| ABcddrere              |\n+------------------------+\n1 row in set (0.00 sec)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br")])]),e("p",[e("code",[s._v("substring()")]),s._v("函数和"),e("code",[s._v("substring_index()")]),s._v("函数示例如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/yancqS/blogImage/raw/master/blogImage/20211214225213.png",alt:""}})]),s._v(" "),e("h3",{attrs:{id:"日期和时间处理函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期和时间处理函数"}},[s._v("#")]),s._v(" 日期和时间处理函数")])])}),[],!1,null,null,null);a.default=t.exports}}]);